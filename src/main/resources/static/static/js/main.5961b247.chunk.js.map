{"version":3,"sources":["QuestionsTable.js","CreateQuize.js","Icon.js","ChoiceTable.js","Questions.js","Choice.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionsTable","questionsList","Table","striped","bordered","hover","map","item","question","type","choices","length","points","Button","variant","CreateQuize","props","state","textTitle","textPoints","textTime","textDate","className","Form","Group","controlId","Label","Control","defaultValue","this","tempQuizArray","title","onChange","evt","setState","target","value","substr","textPoint","timeDuration","date","onClick","data","addQuestions","data3","cancelQuize","data2","createQuize","React","Component","Icon","ChoiceTable","choicesList","choice","isCorrect","Questions","textQuestion","textType","handleChangeType","as","rows","tempQuestion","placeholder","name","id","for","addChoices","cancelQuestion","setQuestion","Choice","textChoice","class","cancelChoice","setChoice","App","useState","flag","setflag","QuestionArray","setQuestionArray","ChoicesArray","setChoicesArry","setTempQuizArray","tempQuestionArray","setTempQuestionArray","Quize","setQuize","tempchoices","temp1","bind","obj","temp","questions","console","log","axios","post","then","response","catch","error","tempquestion","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5961b247.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { BsFillTrashFill, BsPencil } from \"react-icons/bs\"\r\n\r\nconst QuestionsTable = ({ questionsList }) => {\r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Text</th>\r\n                    <th>Type</th>\r\n                    <th>Choices</th>\r\n                    <th>Points</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{\r\n                questionsList.map((item)=>(\r\n                <tr>\r\n                    <td>{item.question}</td>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.choices.length}</td>\r\n                    <td>{item.points}</td>\r\n                    <td>\r\n                        <div>\r\n                            <Button variant=\"light \"><BsPencil></BsPencil></Button>\r\n                            <Button variant=\"light \"><BsFillTrashFill></BsFillTrashFill></Button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                \r\n                    \r\n                ))}\r\n\r\n            </tbody>\r\n        </Table>\r\n\r\n                \r\n                  \r\n    )\r\n}\r\nexport default QuestionsTable;","import React from \"react\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport QuestionsTable from \"./QuestionsTable\";\r\n\r\nclass CreateQuize extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n            textTitle: \"\",\r\n            textPoints: \"\",\r\n            textTime:\"\",\r\n            textDate:\"\"\r\n          };\r\n        \r\n    }\r\n    render() {\r\n        let cancelQuize=()=>{\r\n            this.setState({textPoints: \"\"}); \r\n            this.setState({textTitle: \"\"}); \r\n            this.setState({textDate: \"\"}); \r\n            this.setState({textTime:\"\"}); \r\n            this.props.data3.cancelQuize();\r\n        }\r\n        const createQuize=()=>{\r\n            this.setState({textPoints: \"\"}); \r\n            this.setState({textTitle: \"\"}); \r\n            this.setState({textDate: \"\"}); \r\n            this.setState({textTime:\"\"}); \r\n            this.props.data2.createQuize();\r\n\r\n        }\r\n        const addQuestion = () => {\r\n            if(this.state.textTitle===\"\"){\r\n                this.setState({textTitle: this.props.tempQuizArray.title}); \r\n            }\r\n            if(this.state.textPoints===\"\"){\r\n                this.setState({textPoints: this.props.tempQuizArray.points}); \r\n            }\r\n            if(this.state.textDate===\"\"){\r\n                this.setState({textDate: this.props.tempQuizArray.date}); \r\n            }\r\n            if(this.state.textTime===\"\"){\r\n                this.setState({textTime: this.props.tempQuizArray.timeDuration}); \r\n            }\r\n            \r\n            this.props.data.addQuestions(this.state.textTitle,this.state.textPoint,this.state.textTime,this.state.textDate);\r\n        }\r\n        const handleChangeTitle = (evt) => {\r\n            this.setState({textTitle: evt.target.value.substr(0, 100)});\r\n        }\r\n        const handleChangePoints=(evt)=> {\r\n            this.setState({ textPoint: evt.target.value.substr(0, 100) });\r\n          }\r\n        const handleChangeAllowedTime=(evt)=> {\r\n            this.setState({ textTime: evt.target.value.substr(0, 100) });\r\n          }\r\n        const handleChangeDate=(evt)=> {\r\n            this.setState({ textDate: evt.target.value.substr(0, 100) });\r\n          }\r\n\r\n        return (\r\n            <div className=\"container my-4 w-50 border border-dark\">\r\n                <h1 className='text-center'>Create Quiz</h1>\r\n                <Form>\r\n                    <Form.Group controlId=\"quizTitle\">\r\n                        <Form.Label>Quiz Title</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.props.tempQuizArray.title} onChange={handleChangeTitle}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"points\">\r\n                        <Form.Label>Total Points</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={this.props.tempQuizArray.points} onChange={handleChangePoints}/>\r\n                    </Form.Group>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Form.Group controlId=\"timeAllowed\">\r\n                                <Form.Label>Time Allowed</Form.Label>\r\n                                <Form.Control type=\"text\" defaultValue={this.props.tempQuizArray.timeDuration} onChange={handleChangeAllowedTime}/>\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Form.Group controlId=\"date\">\r\n                                <Form.Label>Deadline</Form.Label>\r\n                                <Form.Control type=\"date\" defaultValue={this.props.tempQuizArray.date} onChange={handleChangeDate}/>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <h3 className='text-center'>Questions</h3>\r\n                    <div className=\"container my-4 h-50 w-80  border border-dark \">\r\n                        <QuestionsTable questionsList={this.props.questionsList}></QuestionsTable>\r\n                        <div className=\"my-4 d-flex justify-content-end\">\r\n                            <Button className='btn-primary' onClick={() => addQuestion()}>Add Question</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-3 d-flex justify-content-end\">\r\n                        <Button className=\"mx-2 btn-light\" variant=\"outline-dark\" onClick={() => cancelQuize()}> Cancel</Button>\r\n                        <Button className=\"btn-pramary mx-2\" onClick={() => createQuize()}>Create Quize</Button>\r\n                    </div>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateQuize;","import React from \"react\";\r\nimport {  BsCheck,BsX } from \"react-icons/bs\"\r\nconst Icon = ({ value }) => {\r\n    if (value === false) {\r\n        return (\r\n            \r\n            <div className=\"text-danger text-center\"><BsX></BsX></div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"text-success text-center\"><BsCheck></BsCheck></div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Icon;","import React from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { BsFillTrashFill, BsPencil } from \"react-icons/bs\"\r\nimport Icon from \"./Icon\";\r\n\r\nconst ChoiceTable = ({choicesList}) => {\r\n   \r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Text</th>\r\n                    <th>is Correct</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    choicesList.map((item) => (\r\n                    <tr>\r\n                        <td>{item.choice}</td>\r\n                        <td>\r\n                            <div className=\"text-success text-center\"><Icon value={item.isCorrect}></Icon></div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"mx-4\">\r\n                                <Button variant=\"light \"><BsPencil></BsPencil></Button>\r\n                                <Button variant=\"light \"><BsFillTrashFill></BsFillTrashFill></Button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </Table>\r\n\r\n\r\n    )\r\n}\r\nexport default ChoiceTable;","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ChoiceTable from \"./ChoiceTable\";\r\nclass Questions extends React.Component {\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n            textQuestion: \"\",\r\n            textType: \"\",\r\n            textPoints:\"\"\r\n          };\r\n        \r\n    }\r\n    render() {\r\n        const cancelQuestion=()=>{\r\n            this.props.data3.cancelQuestion();\r\n        }\r\n        const addChoices = () => {\r\n            if(this.state.textQuestion===\"\"){\r\n                this.setState({textQuestion: this.props.tempQuestion.question}); \r\n            }\r\n            if(this.state.textPoints===\"\"){\r\n                this.setState({textPoints: this.props.tempQuestion.points}); \r\n            }\r\n            if(this.state.textType===\"\"){\r\n                this.setState({textType: this.props.tempQuestion.type}); \r\n            }\r\n           \r\n            this.props.data.addChoices(this.state.textQuestion, this.state.textType, this.state.textPoints);\r\n            \r\n        }\r\n        const addQuestion = () => {\r\n            this.props.data2.setQuestion();\r\n    \r\n        }\r\n        const handleChangeQuestion = (evt) => {\r\n            this.setState({ textQuestion: evt.target.value.substr(0, 100) });\r\n\r\n        }\r\n        const handleChangeType = (evt) => {\r\n            this.setState({ textType: evt.target.value });\r\n        }\r\n        const handleChangePoints = (evt) => {\r\n            this.setState({ textPoints: evt.target.value.substr(0, 100) });\r\n        }\r\n        return (\r\n            <div className=\"container my-4 w-50 border border-dark\">\r\n                <Form>\r\n                    <Form.Group controlId=\"question\">\r\n                        <Form.Label><h1>Question</h1></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} defaultValue={this.props.tempQuestion.question} placeholder=\"Add Question...\" onChange={handleChangeQuestion} />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n\r\n                            <Form.Label>Type</Form.Label>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                    id=\"flexRadioDefault1\" value=\"Single Choice\" onChange={handleChangeType} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault1\">Single Choice</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\"\r\n                                    id=\"flexRadioDefault2\" value=\"Multiple Choice\" onChange={handleChangeType} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault2\">Multiple Choice</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Form.Group controlId=\"points\">\r\n                                <Form.Label>Points</Form.Label>\r\n                                <Form.Control type=\"text\" defaultValue={this.props.tempQuestion.points} onChange={handleChangePoints} />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h3 className='text-center'>Choices</h3>\r\n                    <div className=\"container my-4 h-50 w-80  border border-dark\">\r\n                        <ChoiceTable choicesList={this.props.choicesList}></ChoiceTable>\r\n                        <div className=\"d-flex justify-content-end my-2\">\r\n                            <Button className='btn-primary' onClick={() => addChoices()}>Add Choice</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-3 d-flex justify-content-end\">\r\n                        <Button className=\"mx-2 btn-light\" variant=\"outline-dark\"  onClick={() => cancelQuestion()}> Cancel</Button>\r\n                        <Button className=\"btn-pramary mx-2 \" onClick={() => addQuestion()}>Create</Button>\r\n                    </div>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Questions;","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nclass Choice extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          isCorrect: false\r\n        };\r\n      }\r\n    render() {\r\n        const addChoice = () => {\r\n            this.props.data.setChoice(this.state.textChoice,this.state.isCorrect);\r\n        }\r\n         const cancelChoice = () => {\r\n            this.props.data2.cancelChoice();\r\n        }\r\n        const handleChangeChoice = (evt) => {\r\n            this.setState({textChoice: evt.target.value.substr(0, 100)});\r\n        }\r\n        \r\n        const handleChangeCorrect=(evt)=> {\r\n            this.setState({isCorrect: !this.state.isCorrect});\r\n          }\r\n\r\n        return (\r\n            <div className=\"container my-4 w-50 border border-dark\">\r\n                <Form>\r\n                    <Form.Group controlId=\"choice\">\r\n                        <Form.Label><h1>Choice</h1></Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Add Choice...\" onChange={handleChangeChoice}/>\r\n                    </Form.Group>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" onChange={handleChangeCorrect}/>\r\n                        <label class=\"form-check-label\" for=\"flexCheckDefault\">Correct Option</label>\r\n                    </div>\r\n\r\n                    <div className=\"my-3 d-flex justify-content-end\">\r\n                        <Button className=\"mx-2 btn-light\" variant=\"outline-dark\" onClick={() => cancelChoice()}> Cancel</Button>\r\n                        <Button className=\"btn-pramary mx-2 \" onClick={() => addChoice()}>Add Choice</Button>\r\n                    </div>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Choice;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport CreateQuize from './CreateQuize';\nimport Questions from './Questions';\nimport Choice from './Choice';\nimport {useState} from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n\n\n\n    const [flag, setflag] = useState(0);\n    const [QuestionArray, setQuestionArray] = useState([]);\n    const [ChoicesArray,setChoicesArry]=useState([]);\n    const [tempQuizArray, setTempQuizArray] = useState([]);\n    const [tempQuestionArray,setTempQuestionArray]=useState([]);\n    const [Quize,setQuize]=useState({});\n    let tempchoices=[];\n   \n    let cancelQuize=()=>{\n        setChoicesArry([])\n        setTempQuizArray([]);\n        setQuestionArray([]);\n        setTempQuestionArray([]);\n        setflag(0);\n    }\n    let createQuize=()=>{\n        let obj=tempQuizArray;\n        let temp={title:obj.title,points:obj.points,timeDuration:obj.timeDuration,date:obj.date,questions:QuestionArray};\n\n        setQuize(temp);\n        setChoicesArry([])\n        setTempQuizArray([]);\n        setQuestionArray([]);\n        setTempQuestionArray([]);\n        console.log(temp);\n        console.log(Quize);\n        setflag(0);\n\n        axios.post('http://localhost:8080/savequiz', temp)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n    let addQuestions = (title,points,timeDuration,date) => {\n        let temp1=tempQuizArray;\n        if(title===\"\"){\n            title=temp1.title;\n        }\n        if(points===\"\"){\n            points=temp1.points;\n        }\n        if(timeDuration===\"\"){\n            timeDuration=temp1.timeDuration;\n        }\n        if(date===\"\"){\n            date=temp1.date;\n        }\n        let temp={title,points,timeDuration,date};\n        setTempQuizArray(temp);\n        setflag(1);\n    }\n    let addChoices = (question,type,points) => {\n        let temp1=tempQuestionArray;\n        if(question===\"\"){\n            question=temp1.question;\n        }\n        if(type===\"\"){\n            type=temp1.type;\n        }\n        if(points===\"\"){\n            points=temp1.points;\n        }\n        let temp={question,type,points};\n        setTempQuestionArray(temp);\n        setflag(2);\n    }\n    let setChoice = (choice,isCorrect) => {\n        let temp={choice,isCorrect};\n        tempchoices=ChoicesArray;\n        tempchoices.push(temp);\n        setChoicesArry(tempchoices);\n        setflag(1);\n    }\n    let cancelChoice=()=>{\n        setflag(1);\n    }\n    let setQuestion=()=>{\n        let temp=QuestionArray;\n        let tempquestion=tempQuestionArray;\n        let obj={question:tempquestion.question,type:tempquestion.type,points:tempquestion.points,choices:ChoicesArray};\n        temp.push(obj);\n        setQuestionArray(temp);\n        setTempQuestionArray([]);\n        setTempQuestionArray([]);\n        setChoicesArry([]);\n        setflag(0);\n    }\n    let cancelQuestion=()=>{\n        setTempQuestionArray([]);\n        setTempQuestionArray([]);\n        setChoicesArry([]);\n        setflag(0);\n    }\n    if (flag === 0) {\n        return (\n            <div className=\"container\">\n                <CreateQuize tempQuizArray={tempQuizArray} questionsList={QuestionArray} data={{addQuestions: addQuestions.bind(this)}} data2={{createQuize: createQuize.bind(this)}} data3={{cancelQuize: cancelQuize.bind(this)}}></CreateQuize>\n            </div>\n        );\n    } else if (flag === 1) {\n        return (\n            <div className=\"container\">\n                <Questions tempQuestion={tempQuestionArray} choicesList={ChoicesArray} data={{addChoices: addChoices.bind(this)}} data2={{setQuestion:setQuestion.bind(this)}} data3={{cancelQuestion:cancelQuestion.bind(this)}}></Questions>\n            </div>\n        );\n    } else if (flag === 2) {\n        return (\n            <div className=\"container\">\n                \n                <Choice  data={{setChoice: setChoice.bind(this)}} data2={{cancelChoice: cancelChoice.bind(this)}}></Choice>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}